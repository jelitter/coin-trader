{"version":3,"sources":["models/order.ts","models/wallet.ts","models/coin-price.ts","components/HeaderDetail.tsx","services/get-duration.ts","components/OrderList.tsx","components/PricesChart.tsx","components/CoinTrader.tsx","components/Footer.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["OrderType","INITIAL_WALLET","cash","coins","getNoise","value","Math","random","HeaderDetail","currentPrice","PL","realizedPL","className","style","color","fontFamily","fontWeight","textAlign","width","preserveValue","end","decimals","duration","useEasing","prefix","getDuration","start","suffix","seconds","Date","ceil","getTime","d","floor","h","m","s","dDisplay","hDisplay","mDisplay","sDisplay","parts","filter","Boolean","trim","OrderList","orders","name","useState","now","setNow","useEffect","timer","setInterval","clearInterval","length","sort","a","b","orderNumber","map","order","date","price","toFixed","id","display","height","alignItems","justifyContent","minPrice","timeStamp","Number","MAX_VALUE","maxPrice","PricesChart","prices","bep","rollingMaxPrice","find","p","reduce","max","rollingMinPrice","min","domainMax","domainMin","ticks","ResponsiveContainer","LineChart","data","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","domain","tickCount","yAxisId","orientation","Tooltip","Legend","ReferenceLine","y","stroke","strokeWidth","label","position","fill","fontSize","Line","dot","isAnimationActive","unit","countUpDuration","Orders","initialPrices","setOrders","wallet","setWallet","setPrices","setCurrentPrice","setBep","bepStart","setBepStart","setPL","setRealizedPL","pricesJson","JSON","stringify","shift","uuidv4","toISOString","substring","marginLeft","verticalAlign","opacity","title","disabled","onClick","latestOrder","type","Buy","buyOrders","o","buy","Sell","sell","textShadow","Footer","getFullYear","numberOfPrices","coinPrices","startTime","i","push","getCoinPrices","App","scrollInto","useRef","current","scrollIntoView","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e916afb4.chunk.js","sourcesContent":["export class Order {\r\n    id!: string;\r\n    orderNumber!: number;\r\n    price!: number;\r\n    type!: OrderType;\r\n    date!: Date;\r\n}\r\n\r\nexport enum OrderType {\r\n    Buy,\r\n    Sell,\r\n}\r\n","export type Wallet = {\r\n    cash: number;\r\n    coins: number;\r\n};\r\n\r\nexport const BASE_COIN_PRICE = 100;\r\nexport const INITIAL_WALLET: Wallet = { cash: 2_000, coins: 0 };\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { BASE_COIN_PRICE } from './wallet';\r\n\r\nexport type CoinPrice = {\r\n    id: string;\r\n    timeStamp: string;\r\n    price: number;\r\n};\r\n\r\nexport const PRICES_LENGTH = 240;\r\n\r\n// Up to 3% positive or negative noise\r\nexport const getNoise = (value: number): number => Math.random() * value * 0.03 * (Math.random() > 0.5 ? 1 : -1);\r\n\r\n//    const price: number = +(BASE_COIN_PRICE + getNoise(BASE_COIN_PRICE)).toFixed(2);\r\n\r\n/**\r\n * Generate a list of random coin prices\r\n */\r\nexport const getCoinPrices = (numberOfPrices: number): CoinPrice[] => {\r\n    const coinPrices: CoinPrice[] = [];\r\n    const now = new Date();\r\n    const startTime = new Date(now.getTime() - numberOfPrices * 1000);\r\n\r\n    for (let i = 0; i < numberOfPrices; i++) {\r\n        const timeStamp = new Date(startTime.getTime() + i * 1000).toISOString().substring(11, 19);\r\n        const price = i === 0 ? BASE_COIN_PRICE : coinPrices[i - 1].price + getNoise(coinPrices[i - 1].price);\r\n        coinPrices.push({\r\n            id: uuidv4(),\r\n            timeStamp,\r\n            price: +price.toFixed(2),\r\n        });\r\n    }\r\n\r\n    return coinPrices;\r\n};\r\n","import React from 'react';\r\nimport CountUp from 'react-countup';\r\n\r\nexport default function HeaderDetail({ currentPrice, PL, realizedPL }: { currentPrice: number; PL: number; realizedPL: number }) {\r\n    return (\r\n        <div className='detail'>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Coin Current Price</td>\r\n                        <td\r\n                            style={{\r\n                                color: 'gold',\r\n                                fontFamily: '\"Lucida Console\", Monaco, monospace',\r\n                                fontWeight: '500',\r\n                                textAlign: 'right',\r\n                                width: '40%',\r\n                            }}>\r\n                            <CountUp preserveValue={true} end={currentPrice} decimals={2} duration={0.5} useEasing={true} prefix='$' />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Profit/Loss</td>\r\n                        <td\r\n                            style={{\r\n                                color: PL >= 0 ? '#43a334' : '#ec5e33',\r\n                                fontFamily: '\"Lucida Console\", Monaco, monospace',\r\n                                textAlign: 'right',\r\n                            }}>\r\n                            <CountUp preserveValue={true} end={PL} decimals={2} duration={0.5} useEasing={true} prefix='$' />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Realized Profit/Loss</td>\r\n                        <td\r\n                            style={{\r\n                                color: realizedPL >= 0 ? '#43a334' : '#ec5e33',\r\n                                fontFamily: '\"Lucida Console\", Monaco, monospace',\r\n                                textAlign: 'right',\r\n                            }}>\r\n                            <CountUp preserveValue={true} end={realizedPL} decimals={2} duration={0.5} useEasing={true} prefix='$' />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","/**\r\n * Examples:\r\n * * `getDuration(234234)`\r\n * * `getDuration(date1, date2)`\r\n * * `getDuration(date1)`\r\n *\r\n * Result: `2 days, 17 hours, 3 mins, 54 secs`\r\n *\r\n * @param start Seconds or Start Date\r\n * @param end End Date (optional), ignored if _start_ is seconds.\r\n */\r\nexport const getDuration = (start: Date | number, end: Date = null, suffix = null): string => {\r\n    let seconds = 0;\r\n    if (typeof start === 'number') {\r\n        seconds = start;\r\n    } else {\r\n        if (end === null) {\r\n            end = new Date();\r\n        }\r\n        seconds = Math.ceil((end.getTime() - start.getTime()) / 1000);\r\n    }\r\n\r\n    if (seconds < 2) {\r\n        return 'now';\r\n    }\r\n\r\n    const d = Math.floor(seconds / 86_400);\r\n    const h = Math.floor((seconds % 86_400) / 3600);\r\n    const m = Math.floor((seconds % 3600) / 60);\r\n    const s = Math.floor(seconds % 60);\r\n\r\n    const dDisplay = d > 0 ? d + (d === 1 ? ' day' : ' days') : null;\r\n    const hDisplay = h > 0 ? h + (h === 1 ? ' hour' : ' hours') : null;\r\n    const mDisplay = m > 0 ? m + (m === 1 ? ' min' : ' mins') : null;\r\n    const sDisplay = s > 0 ? s + (s <= 1 ? ' sec' : ' secs') : null;\r\n\r\n    const parts = [dDisplay, hDisplay, mDisplay, sDisplay].filter(Boolean);\r\n    // return parts.join(', ');\r\n    return `${parts[0]} ${suffix}`.trim();\r\n\r\n    // return (dDisplay + hDisplay + mDisplay + sDisplay).trim().slice(0, -1);\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Order } from '../models/order';\r\nimport { getDuration } from '../services/get-duration';\r\nimport './style/OrderList.scss';\r\n\r\nexport const OrderList = ({ orders, name }: { orders: Order[]; name: string }) => {\r\n    const [now, setNow] = useState<Date>(new Date());\r\n\r\n    // Use effect to update the `time ago` every second\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            setNow(new Date());\r\n        }, 1000);\r\n        return () => clearInterval(timer);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {orders.length > 0 ? (\r\n                <>\r\n                    <div className='vignette'></div>\r\n                    <ul>\r\n                        {orders\r\n                            .sort((a, b) => b.orderNumber - a.orderNumber)\r\n                            .map((order: Order) => (\r\n                                <li className='fadeIn' key={order.id}>\r\n                                    <span style={{ color: '#5d6574' }}>{getDuration(order.date, now, 'ago')}</span> [Order #\r\n                                    {order.orderNumber}] ${order.price.toFixed(2)}\r\n                                </li>\r\n                            ))}\r\n                    </ul>\r\n                </>\r\n            ) : (\r\n                <div style={{ display: 'flex', height: '100%', alignItems: 'center', justifyContent: 'center', filter: 'grayscale(0.25)' }}>\r\n                    No {name} yet\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","// import React from 'react';\r\nimport { CartesianGrid, Legend, Line, LineChart, ReferenceLine, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { CoinPrice } from '../models/coin-price';\r\n\r\nlet minPrice: CoinPrice = { id: null, timeStamp: '', price: Number.MAX_VALUE };\r\nlet maxPrice: CoinPrice = { id: null, timeStamp: '', price: -Number.MAX_VALUE };\r\n\r\nexport default function PricesChart({ prices, bep }: { prices: CoinPrice[]; bep: number }) {\r\n    const rollingMaxPrice = prices.find(p => p?.price === prices.reduce((max, p) => (p?.price > max ? p?.price : max), 0));\r\n    const rollingMinPrice = prices.find(p => p?.price === prices.reduce((min, p) => (p?.price < min ? p?.price : min), Number.MAX_VALUE));\r\n\r\n    if (rollingMaxPrice?.price > maxPrice?.price) {\r\n        maxPrice = rollingMaxPrice;\r\n    }\r\n    if (rollingMinPrice?.price < minPrice?.price) {\r\n        minPrice = rollingMinPrice;\r\n    }\r\n\r\n    const domainMax = bep > 0 ? Math.max(maxPrice?.price ?? 0, bep) : maxPrice?.price ?? 0;\r\n    const domainMin = bep > 0 ? Math.min(minPrice?.price ?? 0, bep) : minPrice?.price ?? 0;\r\n\r\n    // eslint-disable-next-line eqeqeq\r\n    const ticks = [maxPrice.id ? maxPrice?.price : rollingMaxPrice?.price, minPrice.id ? minPrice?.price : rollingMinPrice?.price, bep]\r\n        .filter(p => p === +p)\r\n        .sort((a, b) => a - b);\r\n\r\n    return (\r\n        <div className='chart-container'>\r\n            <ResponsiveContainer width='100%' height='100%'>\r\n                <LineChart\r\n                    width={500}\r\n                    height={300}\r\n                    data={prices}\r\n                    margin={{\r\n                        top: 20,\r\n                        right: 5,\r\n                        left: 0,\r\n                        bottom: 10,\r\n                    }}>\r\n                    <CartesianGrid strokeDasharray='3 3' />\r\n                    <XAxis dataKey='timeStamp' />\r\n                    <YAxis dataKey='price' domain={[Math.floor(domainMin - 5), Math.ceil(domainMax + 5)]} />\r\n                    <YAxis\r\n                        dataKey='price'\r\n                        domain={[Math.floor(domainMin - 5), Math.ceil(domainMax + 5)]}\r\n                        tickCount={ticks.length}\r\n                        ticks={ticks}\r\n                        yAxisId='right'\r\n                        orientation='right'\r\n                    />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    {prices?.length > 0 && (\r\n                        <>\r\n                            <ReferenceLine\r\n                                y={maxPrice?.price}\r\n                                stroke='#ec5e33'\r\n                                strokeWidth={2}\r\n                                label={{\r\n                                    position: 'top',\r\n                                    value: 'Max',\r\n                                    fill: '#ef967b',\r\n                                    fontSize: '0.75rem',\r\n                                }}\r\n                            />\r\n                            <ReferenceLine\r\n                                y={minPrice?.price}\r\n                                stroke='#2A58FB'\r\n                                strokeWidth={2}\r\n                                label={{\r\n                                    position: 'bottom',\r\n                                    value: 'Min',\r\n                                    fill: '#8197e5',\r\n                                    fontSize: '0.75rem',\r\n                                }}\r\n                            />\r\n                        </>\r\n                    )}\r\n                    {bep > 0 && (\r\n                        <ReferenceLine\r\n                            y={bep}\r\n                            stroke='#43a334'\r\n                            strokeWidth={2}\r\n                            label={{\r\n                                position: 'top',\r\n                                value: 'BEP',\r\n                                fill: '#63a958',\r\n                                fontSize: '0.9rem',\r\n                            }}\r\n                        />\r\n                    )}\r\n                    <Line dataKey='price' dot={false} isAnimationActive={false} stroke='#8884d8' strokeWidth={2} unit={'$'} />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport CountUp from 'react-countup';\r\nimport { BiCoin } from 'react-icons/bi';\r\nimport { BsCashCoin, BsCashStack } from 'react-icons/bs';\r\nimport { SiCoinbase } from 'react-icons/si';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { CoinPrice, getNoise, PRICES_LENGTH } from '../models/coin-price';\r\nimport { Order, OrderType } from '../models/order';\r\nimport { Wallet } from '../models/wallet';\r\nimport HeaderDetail from './HeaderDetail';\r\nimport { OrderList } from './OrderList';\r\nimport PricesChart from './PricesChart';\r\nimport './style/CoinTrader.scss';\r\n\r\nconst PRICE_RATE = 2000; // milliseconds\r\nconst countUpDuration = 0.5; // seconds\r\n\r\nconst Orders = ({\r\n    orders,\r\n    initialPrices,\r\n    setOrders,\r\n    wallet,\r\n    setWallet,\r\n}: {\r\n    orders: Order[];\r\n    initialPrices: CoinPrice[];\r\n    setOrders: React.Dispatch<React.SetStateAction<Order[]>>;\r\n    wallet: Wallet;\r\n    setWallet: React.Dispatch<React.SetStateAction<Wallet>>;\r\n}) => {\r\n    const [prices, setPrices] = useState<CoinPrice[]>(initialPrices);\r\n    const [currentPrice, setCurrentPrice] = useState<number>(prices[prices.length - 1].price);\r\n    const [bep, setBep] = useState<number>(wallet.coins > 0 ? wallet.coins * currentPrice : null);\r\n    const [bepStart, setBepStart] = useState<Date>(new Date());\r\n    const [PL, setPL] = useState<number>(0);\r\n    const [realizedPL, setRealizedPL] = useState<number>(0);\r\n\r\n    const pricesJson = JSON.stringify(prices);\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            const price: number = +(currentPrice + getNoise(currentPrice)).toFixed(2);\r\n            setCurrentPrice(price);\r\n\r\n            if (prices.length > PRICES_LENGTH) {\r\n                prices.shift();\r\n            }\r\n            setPrices([...prices, { id: uuidv4(), timeStamp: new Date().toISOString().substring(11, 19), price }]);\r\n            setPL(wallet.coins * price - wallet.coins * bep);\r\n        }, PRICE_RATE);\r\n        return () => clearInterval(timer);\r\n    }, [bep, currentPrice, prices, pricesJson, wallet.coins]);\r\n\r\n    const buy = () => {\r\n        const latestOrder: Order = orders[orders.length - 1];\r\n        const order: Order = {\r\n            id: uuidv4(),\r\n            date: new Date(),\r\n            orderNumber: (latestOrder?.orderNumber ?? 0) + 1,\r\n            type: OrderType.Buy,\r\n            price: currentPrice,\r\n        };\r\n\r\n        setOrders([...orders, order]);\r\n        setWallet({ cash: wallet.cash - order.price, coins: wallet.coins + 1 });\r\n\r\n        const buyOrders = [...orders, order]\r\n            .filter(o => o.type === OrderType.Buy && o.date.getTime() > bepStart.getTime())\r\n            .map(o => o.price);\r\n        const bep = buyOrders.reduce((a, b) => a + b, 0) / buyOrders.length ?? 0;\r\n\r\n        setBep(+bep.toFixed(2));\r\n    };\r\n\r\n    const sell = () => {\r\n        const latestOrder: Order = orders[orders.length - 1];\r\n        const order: Order = {\r\n            id: uuidv4(),\r\n            date: new Date(),\r\n            orderNumber: (latestOrder?.orderNumber ?? 0) + 1,\r\n            type: OrderType.Sell,\r\n            price: currentPrice,\r\n        };\r\n\r\n        setOrders([...orders, order]);\r\n        setWallet({ cash: wallet.cash + order.price, coins: wallet.coins - 1 });\r\n\r\n        setRealizedPL(realizedPL + (order.price - bep));\r\n\r\n        if (wallet.coins === 1) {\r\n            setBep(null);\r\n            setBepStart(order.date);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='orders'>\r\n            <div className='logo'>\r\n                <SiCoinbase\r\n                    style={{\r\n                        height: '6rem',\r\n                        width: '50%',\r\n                        marginLeft: '-70px',\r\n                    }}\r\n                />\r\n                <HeaderDetail currentPrice={currentPrice} PL={PL} realizedPL={realizedPL} />\r\n            </div>\r\n            <div className='header'>\r\n                <div className='title'>\r\n                    <BsCashCoin style={{ height: '2rem', color: '#2A58FB', verticalAlign: 'middle' }} />\r\n                    <div>\r\n                        <div style={{ fontSize: '0.75rem', textAlign: 'left', opacity: '0.75' }}>Wallet</div>\r\n                        <CountUp\r\n                            decimals={2}\r\n                            duration={countUpDuration}\r\n                            end={wallet.coins * currentPrice + wallet.cash}\r\n                            prefix='$'\r\n                            preserveValue={true}\r\n                            useEasing={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='coins' title='Coins'>\r\n                    <BiCoin style={{ height: '2rem', color: 'gold', verticalAlign: 'middle' }} />\r\n                    <div>\r\n                        <div style={{ fontSize: '0.75rem', textAlign: 'left', opacity: '0.75' }}>{wallet.coins} coins</div>\r\n                        <CountUp\r\n                            decimals={2}\r\n                            duration={countUpDuration}\r\n                            end={wallet.coins * currentPrice}\r\n                            prefix='$'\r\n                            preserveValue={true}\r\n                            useEasing={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='cash' title='Cash'>\r\n                    <BsCashStack style={{ height: '2rem', color: '#43a334', verticalAlign: 'middle' }} />\r\n                    <div>\r\n                        <div style={{ fontSize: '0.75rem', textAlign: 'left', opacity: '0.75' }}>Cash</div>\r\n                        <CountUp\r\n                            decimals={2}\r\n                            duration={countUpDuration}\r\n                            end={wallet.cash}\r\n                            prefix='$'\r\n                            preserveValue={true}\r\n                            useEasing={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='actions'>\r\n                <button className='buy' disabled={wallet.cash <= currentPrice} onClick={() => buy()}>\r\n                    Buy\r\n                </button>\r\n                <button className='sell' disabled={wallet.coins <= 0} onClick={() => sell()}>\r\n                    Sell\r\n                </button>\r\n            </div>\r\n\r\n            <PricesChart prices={prices} bep={bep} />\r\n\r\n            <div className='sales'>\r\n                <OrderList orders={orders.filter((order: Order) => order.type === OrderType.Sell)} name='Sales' />\r\n            </div>\r\n            <div className='purchases'>\r\n                <div\r\n                    title='Break Even Price'\r\n                    style={{ position: 'absolute', top: '1rem', color: '#eee', textShadow: 'rgb(0 0 0) 2px 2px 1px' }}>\r\n                    <div>B.E.P.</div>\r\n                    {/* <div style={{ fontSize: '1.25rem' }}>{bep ? `$${bep.toFixed(2)}` : <>&mdash;</>}</div> */}\r\n                    <div style={{ fontSize: '1.25rem' }}>\r\n                        {bep ? (\r\n                            <CountUp preserveValue={true} end={bep} decimals={2} duration={countUpDuration} useEasing={true} prefix='$' />\r\n                        ) : (\r\n                            <>&mdash;</>\r\n                        )}\r\n                    </div>\r\n\r\n                    {bep && (\r\n                        <div style={{ fontSize: '0.8rem', color: currentPrice - bep >= 0 ? '#43a334' : '#ec5e33' }}>\r\n                            {bep > 0 ? (\r\n                                <CountUp\r\n                                    decimals={2}\r\n                                    duration={countUpDuration}\r\n                                    end={currentPrice - bep}\r\n                                    prefix='$'\r\n                                    preserveValue={true}\r\n                                    useEasing={true}\r\n                                />\r\n                            ) : (\r\n                                (0).toFixed(2)\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <OrderList orders={orders.filter((order: Order) => order.type === OrderType.Buy)} name='Purchases' />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Orders;\r\n","export default function Footer() {\r\n    return <div className='footer'>&copy; {new Date().getFullYear()} Isaac Sanchez</div>;\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\nimport './App.scss';\nimport OrderBook from './components/CoinTrader';\nimport Footer from './components/Footer';\nimport { getCoinPrices, PRICES_LENGTH } from './models/coin-price';\nimport { Order } from './models/order';\nimport { INITIAL_WALLET, Wallet } from './models/wallet';\n\nconst initialPrices = getCoinPrices(PRICES_LENGTH);\n\nconst App = () => {\n    const [orders, setOrders] = useState<Order[]>([]);\n    const [wallet, setWallet] = useState<Wallet>(INITIAL_WALLET);\n\n    const scrollInto = useRef(null);\n    useEffect(() => {\n        scrollInto.current.scrollIntoView();\n    });\n\n    return (\n        <div className='App' ref={scrollInto}>\n            <OrderBook orders={orders} initialPrices={initialPrices} setOrders={setOrders} wallet={wallet} setWallet={setWallet} />\n            <Footer />\n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}