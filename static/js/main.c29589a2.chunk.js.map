{"version":3,"sources":["models/order.ts","models/wallet.ts","models/coin-price.ts","components/BreakEvenPrice.tsx","components/HeaderDetail.tsx","services/get-duration.ts","components/OrderList.tsx","components/PricesChart.tsx","components/CoinTrader.tsx","components/Footer.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["OrderType","INITIAL_WALLET","cash","coins","getNoise","value","Math","random","BreakEvenPrice","bep","currentPrice","countUpDuration","className","title","preserveValue","end","decimals","duration","useEasing","prefix","toFixed","HeaderDetail","PL","realizedPL","getDuration","start","suffix","seconds","Date","ceil","getTime","d","floor","h","m","s","dDisplay","hDisplay","mDisplay","sDisplay","parts","filter","Boolean","trim","OrderList","orders","name","useState","now","setNow","useEffect","timer","setInterval","clearInterval","length","sort","a","b","orderNumber","map","order","date","price","id","minPrice","timeStamp","Number","MAX_VALUE","maxPrice","PricesChart","prices","rollingMaxPrice","find","p","reduce","max","rollingMinPrice","min","domainMax","domainMin","ticks","ResponsiveContainer","width","height","LineChart","data","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","domain","tickCount","yAxisId","orientation","Tooltip","Legend","ReferenceLine","y","stroke","strokeWidth","label","position","fill","fontSize","Line","dot","isAnimationActive","unit","CoinTrader","initialPrices","setOrders","wallet","setWallet","setPrices","setCurrentPrice","setBep","bepStart","setBepStart","setPL","setRealizedPL","pricesJson","JSON","stringify","shift","uuidv4","toISOString","substring","style","marginLeft","color","verticalAlign","disabled","onClick","latestOrder","type","Buy","buyOrders","o","buy","Sell","sell","Footer","getFullYear","numberOfPrices","coinPrices","startTime","i","push","getCoinPrices","App","scrollInto","useRef","current","scrollIntoView","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c29589a2.chunk.js","sourcesContent":["export class Order {\r\n    id!: string;\r\n    orderNumber!: number;\r\n    price!: number;\r\n    type!: OrderType;\r\n    date!: Date;\r\n}\r\n\r\nexport enum OrderType {\r\n    Buy,\r\n    Sell,\r\n}\r\n","export type Wallet = {\r\n    cash: number;\r\n    coins: number;\r\n};\r\n\r\nexport const BASE_COIN_PRICE = 100;\r\nexport const INITIAL_WALLET: Wallet = { cash: 2_000, coins: 0 };\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { BASE_COIN_PRICE } from './wallet';\r\n\r\nexport type CoinPrice = {\r\n    id: string;\r\n    timeStamp: string;\r\n    price: number;\r\n};\r\n\r\nexport const PRICES_LENGTH = 240;\r\n\r\n// Up to 3% positive or negative noise\r\nexport const getNoise = (value: number): number => Math.random() * value * 0.03 * (Math.random() > 0.5 ? 1 : -1);\r\n\r\n//    const price: number = +(BASE_COIN_PRICE + getNoise(BASE_COIN_PRICE)).toFixed(2);\r\n\r\n/**\r\n * Generate a list of random coin prices\r\n */\r\nexport const getCoinPrices = (numberOfPrices: number): CoinPrice[] => {\r\n    const coinPrices: CoinPrice[] = [];\r\n    const now = new Date();\r\n    const startTime = new Date(now.getTime() - numberOfPrices * 1000);\r\n\r\n    for (let i = 0; i < numberOfPrices; i++) {\r\n        const timeStamp = new Date(startTime.getTime() + i * 1000).toISOString().substring(11, 19);\r\n        const price = i === 0 ? BASE_COIN_PRICE : coinPrices[i - 1].price + getNoise(coinPrices[i - 1].price);\r\n        coinPrices.push({\r\n            id: uuidv4(),\r\n            timeStamp,\r\n            price: +price.toFixed(2),\r\n        });\r\n    }\r\n\r\n    return coinPrices;\r\n};\r\n","import CountUp from 'react-countup';\r\nimport { BreakEvenPriceProps } from '../models/prop-types';\r\nimport './style/BreakEvenPrice.scss';\r\n\r\nexport const BreakEvenPrice = ({ bep, currentPrice, countUpDuration }: BreakEvenPriceProps) => (\r\n    <div className='BreakEvenPrice' title='Break Even Price'>\r\n        <div>B.E.P.</div>\r\n        <div className='bep'>\r\n            {bep ? (\r\n                <CountUp preserveValue={true} end={bep} decimals={2} duration={countUpDuration} useEasing={true} prefix='$' />\r\n            ) : (\r\n                <>&mdash;</>\r\n            )}\r\n        </div>\r\n\r\n        {bep && (\r\n            <div className={`single-pl ${currentPrice - bep >= 0 ? 'pos' : 'neg'}`}>\r\n                {bep > 0 ? (\r\n                    <CountUp\r\n                        decimals={2}\r\n                        duration={countUpDuration}\r\n                        end={currentPrice - bep}\r\n                        prefix='$'\r\n                        preserveValue={true}\r\n                        useEasing={true}\r\n                    />\r\n                ) : (\r\n                    (0).toFixed(2)\r\n                )}\r\n            </div>\r\n        )}\r\n    </div>\r\n);\r\n","import CountUp from 'react-countup';\r\nimport { HeaderDetailProps } from '../models/prop-types';\r\nimport './style/HeaderDetail.scss';\r\n\r\nexport const HeaderDetail = ({ currentPrice, PL, realizedPL }: HeaderDetailProps) => (\r\n    <div className='HeaderDetail'>\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <td>Coin Current Price</td>\r\n                    <td className='current'>\r\n                        <CountUp preserveValue={true} end={currentPrice} decimals={2} duration={0.5} useEasing={true} prefix='$' />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Profit/Loss</td>\r\n                    <td className={`pl ${PL >= 0 ? 'pos' : 'neg'}`}>\r\n                        <CountUp preserveValue={true} end={PL} decimals={2} duration={0.5} useEasing={true} prefix='$' />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Realized Profit/Loss</td>\r\n                    <td className={`realized ${realizedPL >= 0 ? 'pos' : 'neg'}`}>\r\n                        <CountUp preserveValue={true} end={realizedPL} decimals={2} duration={0.5} useEasing={true} prefix='$' />\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n);\r\n","/**\r\n * Examples:\r\n * * `getDuration(234234)`\r\n * * `getDuration(date1, date2)`\r\n * * `getDuration(date1)`\r\n *\r\n * Result: `2 days, 17 hours, 3 mins, 54 secs`\r\n *\r\n * @param start Seconds or Start Date\r\n * @param end End Date (optional), ignored if _start_ is seconds.\r\n */\r\nexport const getDuration = (start: Date | number, end: Date = null, suffix = null): string => {\r\n    let seconds = 0;\r\n    if (typeof start === 'number') {\r\n        seconds = start;\r\n    } else {\r\n        if (end === null) {\r\n            end = new Date();\r\n        }\r\n        seconds = Math.ceil((end.getTime() - start.getTime()) / 1000);\r\n    }\r\n\r\n    if (seconds < 2) {\r\n        return 'now';\r\n    }\r\n\r\n    const d = Math.floor(seconds / 86_400);\r\n    const h = Math.floor((seconds % 86_400) / 3600);\r\n    const m = Math.floor((seconds % 3600) / 60);\r\n    const s = Math.floor(seconds % 60);\r\n\r\n    const dDisplay = d > 0 ? d + (d === 1 ? ' day' : ' days') : null;\r\n    const hDisplay = h > 0 ? h + (h === 1 ? ' hour' : ' hours') : null;\r\n    const mDisplay = m > 0 ? m + (m === 1 ? ' min' : ' mins') : null;\r\n    const sDisplay = s > 0 ? s + (s <= 1 ? ' sec' : ' secs') : null;\r\n\r\n    const parts = [dDisplay, hDisplay, mDisplay, sDisplay].filter(Boolean);\r\n    // return parts.join(', ');\r\n    return `${parts[0]} ${suffix}`.trim();\r\n\r\n    // return (dDisplay + hDisplay + mDisplay + sDisplay).trim().slice(0, -1);\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { Order } from '../models/order';\r\nimport { OrderListProps } from '../models/prop-types';\r\nimport { getDuration } from '../services/get-duration';\r\nimport './style/OrderList.scss';\r\n\r\nexport const OrderList = ({ orders, name }: OrderListProps) => {\r\n    const [now, setNow] = useState<Date>(new Date());\r\n\r\n    // Use effect to update the `time ago` every second\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            setNow(new Date());\r\n        }, 1000);\r\n        return () => clearInterval(timer);\r\n    }, []);\r\n\r\n    return (\r\n        <div className='OrderList'>\r\n            {orders.length > 0 ? (\r\n                <>\r\n                    <div className={`vignette ${name}`}></div>\r\n                    <ul>\r\n                        {orders\r\n                            .sort((a, b) => b.orderNumber - a.orderNumber)\r\n                            .map((order: Order) => (\r\n                                <li className='fadeIn' key={order.id}>\r\n                                    <span className='duration'>{getDuration(order.date, now, 'ago')}</span> &nbsp; [Order #\r\n                                    {order.orderNumber}] &nbsp; ${order.price.toFixed(2)}\r\n                                </li>\r\n                            ))}\r\n                    </ul>\r\n                </>\r\n            ) : (\r\n                <div className='empty'>No {name} yet</div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","import { CartesianGrid, Legend, Line, LineChart, ReferenceLine, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { CoinPrice } from '../models/coin-price';\r\nimport { PriceChartProps } from '../models/prop-types';\r\n\r\nlet minPrice: CoinPrice = { id: null, timeStamp: '', price: Number.MAX_VALUE };\r\nlet maxPrice: CoinPrice = { id: null, timeStamp: '', price: -Number.MAX_VALUE };\r\n\r\nexport const PricesChart = ({ prices, bep }: PriceChartProps) => {\r\n    const rollingMaxPrice = prices.find(p => p?.price === prices.reduce((max, p) => (p?.price > max ? p?.price : max), 0));\r\n    const rollingMinPrice = prices.find(p => p?.price === prices.reduce((min, p) => (p?.price < min ? p?.price : min), Number.MAX_VALUE));\r\n\r\n    if (rollingMaxPrice?.price > maxPrice?.price) {\r\n        maxPrice = rollingMaxPrice;\r\n    }\r\n    if (rollingMinPrice?.price < minPrice?.price) {\r\n        minPrice = rollingMinPrice;\r\n    }\r\n\r\n    const domainMax = bep > 0 ? Math.max(maxPrice?.price ?? 0, bep) : maxPrice?.price ?? 0;\r\n    const domainMin = bep > 0 ? Math.min(minPrice?.price ?? 0, bep) : minPrice?.price ?? 0;\r\n\r\n    // eslint-disable-next-line eqeqeq\r\n    const ticks = [maxPrice.id ? maxPrice?.price : rollingMaxPrice?.price, minPrice.id ? minPrice?.price : rollingMinPrice?.price, bep]\r\n        .filter(p => p === +p)\r\n        .sort((a, b) => a - b);\r\n\r\n    return (\r\n        <div className='chart-container'>\r\n            <ResponsiveContainer width='100%' height='100%'>\r\n                <LineChart\r\n                    width={500}\r\n                    height={300}\r\n                    data={prices}\r\n                    margin={{\r\n                        top: 20,\r\n                        right: 5,\r\n                        left: 0,\r\n                        bottom: 10,\r\n                    }}>\r\n                    <CartesianGrid strokeDasharray='3 3' />\r\n                    <XAxis dataKey='timeStamp' />\r\n                    <YAxis dataKey='price' domain={[Math.floor(domainMin - 5), Math.ceil(domainMax + 5)]} />\r\n                    <YAxis\r\n                        dataKey='price'\r\n                        domain={[Math.floor(domainMin - 5), Math.ceil(domainMax + 5)]}\r\n                        tickCount={ticks.length}\r\n                        ticks={ticks}\r\n                        yAxisId='right'\r\n                        orientation='right'\r\n                    />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    {prices?.length > 0 && (\r\n                        <>\r\n                            <ReferenceLine\r\n                                y={maxPrice?.price}\r\n                                stroke='#ec5e33'\r\n                                strokeWidth={2}\r\n                                label={{\r\n                                    position: 'top',\r\n                                    value: 'Max',\r\n                                    fill: '#ef967b',\r\n                                    fontSize: '0.75rem',\r\n                                }}\r\n                            />\r\n                            <ReferenceLine\r\n                                y={minPrice?.price}\r\n                                stroke='#2A58FB'\r\n                                strokeWidth={2}\r\n                                label={{\r\n                                    position: 'bottom',\r\n                                    value: 'Min',\r\n                                    fill: '#8197e5',\r\n                                    fontSize: '0.75rem',\r\n                                }}\r\n                            />\r\n                        </>\r\n                    )}\r\n                    {bep > 0 && (\r\n                        <ReferenceLine\r\n                            y={bep}\r\n                            stroke='#43a334'\r\n                            strokeWidth={2}\r\n                            label={{\r\n                                position: 'top',\r\n                                value: 'BEP',\r\n                                fill: '#63a958',\r\n                                fontSize: '0.9rem',\r\n                            }}\r\n                        />\r\n                    )}\r\n                    <Line dataKey='price' dot={false} isAnimationActive={false} stroke='#8884d8' strokeWidth={2} unit={'$'} />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport CountUp from 'react-countup';\r\nimport { BiCoin } from 'react-icons/bi';\r\nimport { BsCashCoin, BsCashStack } from 'react-icons/bs';\r\nimport { SiCoinbase } from 'react-icons/si';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { CoinPrice, getNoise, PRICES_LENGTH } from '../models/coin-price';\r\nimport { Order, OrderType } from '../models/order';\r\nimport { CoinTraderProps } from '../models/prop-types';\r\nimport { BreakEvenPrice } from './BreakEvenPrice';\r\nimport { HeaderDetail } from './HeaderDetail';\r\nimport { OrderList } from './OrderList';\r\nimport { PricesChart } from './PricesChart';\r\nimport './style/CoinTrader.scss';\r\n\r\nconst PRICE_RATE = 2000; // milliseconds\r\nconst countUpDuration = 0.5; // seconds\r\n\r\nexport const CoinTrader = ({ orders, initialPrices, setOrders, wallet, setWallet }: CoinTraderProps) => {\r\n    const [prices, setPrices] = useState<CoinPrice[]>(initialPrices);\r\n    const [currentPrice, setCurrentPrice] = useState<number>(prices[prices.length - 1].price);\r\n    const [bep, setBep] = useState<number>(wallet.coins > 0 ? wallet.coins * currentPrice : null);\r\n    const [bepStart, setBepStart] = useState<Date>(new Date());\r\n    const [PL, setPL] = useState<number>(0);\r\n    const [realizedPL, setRealizedPL] = useState<number>(0);\r\n\r\n    const pricesJson = JSON.stringify(prices);\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            const price: number = +(currentPrice + getNoise(currentPrice)).toFixed(2);\r\n            setCurrentPrice(price);\r\n\r\n            if (prices.length > PRICES_LENGTH) {\r\n                prices.shift();\r\n            }\r\n            setPrices([...prices, { id: uuidv4(), timeStamp: new Date().toISOString().substring(11, 19), price }]);\r\n            setPL(wallet.coins * price - wallet.coins * bep);\r\n        }, PRICE_RATE);\r\n        return () => clearInterval(timer);\r\n    }, [bep, currentPrice, prices, pricesJson, wallet.coins]);\r\n\r\n    const buy = () => {\r\n        const latestOrder: Order = orders[orders.length - 1];\r\n        const order: Order = {\r\n            id: uuidv4(),\r\n            date: new Date(),\r\n            orderNumber: (latestOrder?.orderNumber ?? 0) + 1,\r\n            type: OrderType.Buy,\r\n            price: currentPrice,\r\n        };\r\n\r\n        setOrders([...orders, order]);\r\n        setWallet({ cash: wallet.cash - order.price, coins: wallet.coins + 1 });\r\n\r\n        const buyOrders = [...orders, order]\r\n            .filter(o => o.type === OrderType.Buy && o.date.getTime() > bepStart.getTime())\r\n            .map(o => o.price);\r\n        const bep = buyOrders.reduce((a, b) => a + b, 0) / buyOrders.length ?? 0;\r\n\r\n        setBep(+bep.toFixed(2));\r\n    };\r\n\r\n    const sell = () => {\r\n        const latestOrder: Order = orders[orders.length - 1];\r\n        const order: Order = {\r\n            id: uuidv4(),\r\n            date: new Date(),\r\n            orderNumber: (latestOrder?.orderNumber ?? 0) + 1,\r\n            type: OrderType.Sell,\r\n            price: currentPrice,\r\n        };\r\n\r\n        setOrders([...orders, order]);\r\n        setWallet({ cash: wallet.cash + order.price, coins: wallet.coins - 1 });\r\n\r\n        setRealizedPL(realizedPL + (order.price - bep));\r\n\r\n        if (wallet.coins === 1) {\r\n            setBep(null);\r\n            setBepStart(order.date);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='orders'>\r\n            <div className='logo'>\r\n                <SiCoinbase\r\n                    style={{\r\n                        height: '6rem',\r\n                        width: '50%',\r\n                        marginLeft: '-70px',\r\n                    }}\r\n                />\r\n                <HeaderDetail currentPrice={currentPrice} PL={PL} realizedPL={realizedPL} />\r\n            </div>\r\n\r\n            <div className='header'>\r\n                <div className='title'>\r\n                    <BsCashCoin style={{ height: '2rem', color: '#2A58FB', verticalAlign: 'middle' }} />\r\n                    <div>\r\n                        <div className='subtitle'>Wallet</div>\r\n                        <CountUp\r\n                            decimals={2}\r\n                            duration={countUpDuration}\r\n                            end={wallet.coins * currentPrice + wallet.cash}\r\n                            prefix='$'\r\n                            preserveValue={true}\r\n                            useEasing={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='coins' title='Coins'>\r\n                    <BiCoin style={{ height: '2rem', color: 'gold', verticalAlign: 'middle' }} />\r\n                    <div>\r\n                        <div className='subtitle'>{wallet.coins} coins</div>\r\n                        <CountUp\r\n                            decimals={2}\r\n                            duration={countUpDuration}\r\n                            end={wallet.coins * currentPrice}\r\n                            prefix='$'\r\n                            preserveValue={true}\r\n                            useEasing={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='cash' title='Cash'>\r\n                    <BsCashStack style={{ height: '2rem', color: '#43a334', verticalAlign: 'middle' }} />\r\n                    <div>\r\n                        <div className='subtitle'>Cash</div>\r\n                        <CountUp\r\n                            decimals={2}\r\n                            duration={countUpDuration}\r\n                            end={wallet.cash}\r\n                            prefix='$'\r\n                            preserveValue={true}\r\n                            useEasing={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='actions'>\r\n                <button className='buy' disabled={wallet.cash <= currentPrice} onClick={() => buy()}>\r\n                    Buy\r\n                </button>\r\n                <button className='sell' disabled={wallet.coins <= 0} onClick={() => sell()}>\r\n                    Sell\r\n                </button>\r\n            </div>\r\n\r\n            <PricesChart prices={prices} bep={bep} />\r\n\r\n            <div className='sales'>\r\n                <OrderList orders={orders.filter((order: Order) => order.type === OrderType.Sell)} name='sales' />\r\n            </div>\r\n\r\n            <div className='purchases'>\r\n                <BreakEvenPrice bep={bep} currentPrice={currentPrice} countUpDuration={countUpDuration} />\r\n                <OrderList orders={orders.filter((order: Order) => order.type === OrderType.Buy)} name='purchases' />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","export const Footer = () => <div className='footer'>&copy; {new Date().getFullYear()} Isaac Sanchez</div>;\r\n","import { useEffect, useRef, useState } from 'react';\nimport './App.scss';\nimport { CoinTrader } from './components/CoinTrader';\nimport { Footer } from './components/Footer';\nimport { getCoinPrices, PRICES_LENGTH } from './models/coin-price';\nimport { Order } from './models/order';\nimport { INITIAL_WALLET, Wallet } from './models/wallet';\n\nconst initialPrices = getCoinPrices(PRICES_LENGTH);\n\nconst App = () => {\n    const [orders, setOrders] = useState<Order[]>([]);\n    const [wallet, setWallet] = useState<Wallet>(INITIAL_WALLET);\n\n    const scrollInto = useRef(null);\n    useEffect(() => {\n        scrollInto.current.scrollIntoView();\n    });\n\n    return (\n        <div className='App' ref={scrollInto}>\n            <CoinTrader orders={orders} initialPrices={initialPrices} setOrders={setOrders} wallet={wallet} setWallet={setWallet} />\n            <Footer />\n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}